import { InferSchemaType, model, Schema } from "mongoose";
import { FieldsType } from "@/types/types";
import { regexEmail, regexPassword, regexString, regexBoolean, regexImage } from "@/utils/regex";

export const fields: FieldsType = {
  verified: {
    type: Boolean,
    fk: false,
    parent: "",
    parentUnset: [],
    fkGet: false,
    search: false,
    select: true,
    required: true,
    unique: false,
    minLength: 4,
    maxLength: 5,
    regex: regexBoolean,
    isHashed: false,
    isImage: false,
    isFile: false,
  },
  photo: {
    type: String,
    fk: false,
    parent: "",
    parentUnset: [],
    fkGet: false,
    search: false,
    select: true,
    required: false,
    unique: false,
    minLength: 0,
    maxLength: 255,
    regex: regexImage,
    isHashed: false,
    isImage: true,
    isFile: false,
  },
  name: {
    type: String,
    fk: false,
    parent: "",
    parentUnset: [],
    fkGet: false,
    search: true,
    select: true,
    required: true,
    unique: false,
    minLength: 6,
    maxLength: 255,
    regex: regexString,
    isHashed: false,
    isImage: false,
    isFile: false,
  },
  email: {
    type: String,
    fk: false,
    parent: "",
    parentUnset: [],
    fkGet: false,
    search: true,
    select: true,
    required: true,
    unique: true,
    minLength: 6,
    maxLength: 255,
    regex: regexEmail,
    isHashed: false,
    isImage: false,
    isFile: false,
  },
  password: {
    type: String,
    fk: false,
    parent: "",
    parentUnset: [],
    fkGet: false,
    search: false,
    select: false,
    required: true,
    unique: false,
    minLength: 6,
    maxLength: 255,
    regex: regexPassword,
    isHashed: true,
    isImage: false,
    isFile: false,
  },
};

export const userSchema = new Schema(fields, { timestamps: true });
type User = InferSchemaType<typeof userSchema>;
export default model<User>("User", userSchema);
